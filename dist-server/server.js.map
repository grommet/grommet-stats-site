{"version":3,"sources":["../server/server.js"],"names":["MOCK_API","process","env","PORT","GITHUB_TOKEN","GITHUB_ORGANIZATION","githubOrgStats","authenticate","app","use","json","get","req","res","send","totalStars","then","result","catch","error","console","log","status","static","join","__dirname","sendFile","resolve","server","createServer","listen"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,IAAMA,WAAWC,QAAQC,GAAR,CAAYF,QAA7B;AACA,IAAMG,OAAOF,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AACA,IAAMC,eAAeH,QAAQC,GAAR,CAAYE,YAAjC;AACA,IAAMC,sBAAsBJ,QAAQC,GAAR,CAAYG,mBAAZ,IAAmC,SAA/D;;AAEA,IAAIC,uBAAJ;AACA,IAAI,CAACN,QAAL,EAAe;AACbM,mBAAiB,6BAAmBF,YAAnB,EAAiCC,mBAAjC,CAAjB;AACAC,iBAAeC,YAAf;AACD;;AAED,IAAMC,MAAM,yBACTC,GADS,CACL,4BADK,EAETA,GAFS,CAEL,6BAFK,EAGTA,GAHS,CAGL,sBAAO,MAAP,CAHK,EAITA,GAJS,CAIL,qBAAWC,IAAX,EAJK,CAAZ;;AAMAF,IAAIG,GAAJ,CAAQ,YAAR,EAAsB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClC,MAAIb,QAAJ,EAAc;AACZa,QAAIC,IAAJ,CAAS;AACPC,kBAAY;AADL,KAAT;AAGD,GAJD,MAIO;AACLT,mBAAeK,GAAf,GACCK,IADD,CACM;AAAA,aAAUH,IAAIC,IAAJ,CAASG,MAAT,CAAV;AAAA,KADN,EAECC,KAFD,CAEO,UAACC,KAAD,EAAW;AAChBC,cAAQC,GAAR,CAAYF,KAAZ;AACAN,UAAIS,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB,+BAArB;AACD,KALD;AAMD;AACF,CAbD;;AAeA;AACAN,IAAIC,GAAJ,CAAQ,GAAR,EAAa,kBAAQc,MAAR,CAAe,eAAKC,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAf,CAAb;AACAjB,IAAIG,GAAJ,CAAQ,IAAR,EAAc,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1BA,MAAIa,QAAJ,CAAa,eAAKC,OAAL,CAAa,eAAKH,IAAL,CAAUC,SAAV,EAAqB,qBAArB,CAAb,CAAb;AACD,CAFD;;AAIA,IAAMG,SAAS,eAAKC,YAAL,CAAkBrB,GAAlB,CAAf;AACAoB,OAAOE,MAAP,CAAc3B,IAAd;;AAEAiB,QAAQC,GAAR,yCAAkDlB,IAAlD","file":"server.js","sourcesContent":["import compression from 'compression';\nimport express from 'express';\nimport http from 'http';\nimport morgan from 'morgan';\nimport bodyParser from 'body-parser';\nimport cookieParser from 'cookie-parser';\nimport path from 'path';\n\nimport GithubOrgStats from 'github-org-stats';\n\nconst MOCK_API = process.env.MOCK_API;\nconst PORT = process.env.PORT || 8102;\nconst GITHUB_TOKEN = process.env.GITHUB_TOKEN;\nconst GITHUB_ORGANIZATION = process.env.GITHUB_ORGANIZATION || 'grommet';\n\nlet githubOrgStats;\nif (!MOCK_API) {\n  githubOrgStats = new GithubOrgStats(GITHUB_TOKEN, GITHUB_ORGANIZATION);\n  githubOrgStats.authenticate();\n}\n\nconst app = express()\n  .use(compression())\n  .use(cookieParser())\n  .use(morgan('tiny'))\n  .use(bodyParser.json());\n\napp.get('/api/stats', (req, res) => {\n  if (MOCK_API) {\n    res.send({\n      totalStars: 100000,\n    });\n  } else {\n    githubOrgStats.get()\n    .then(result => res.send(result))\n    .catch((error) => {\n      console.log(error);\n      res.status(403).send('You do not have a valid token');\n    });\n  }\n});\n\n// UI\napp.use('/', express.static(path.join(__dirname, '/../dist')));\napp.get('/*', (req, res) => {\n  res.sendFile(path.resolve(path.join(__dirname, '/../dist/index.html')));\n});\n\nconst server = http.createServer(app);\nserver.listen(PORT);\n\nconsole.log(`Server started at http://localhost:${PORT}`);\n"]}